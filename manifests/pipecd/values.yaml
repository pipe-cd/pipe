# PipeCD service and ingress.
service:
  port: 443
  internalPort: 8443
  annotations:
    cloud.google.com/app-protocols: '{"service":"HTTP2", "internal-service":"HTTP2"}'

backendConfig:
  enabled: true

managedCertificate:
  enabled: false

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.allow-http: "false"
    # kubernetes.io/ingress.global-static-ip-name: pipecd
  domains: []
    # - api.pipecd.dev
    # - dev.pipecd.dev

cors:
  enabled: true
  allowOrigins:
    - "http://localhost:9090"

# PipeCD workloads.
gateway:
  replicasCount: 1
  imageTag: v1.10.0
  resources: {}

api:
  replicasCount: 1
  imageTag: ""
  useDebugImage: true
  args:
    cacheAddress: ""
    useFakeResponse: false
    enableGRPCReflection: true
  resources: {}

web:
  replicasCount: 1
  imageTag: ""
  resources: {}

cache:
  imageTag: "5.0.5-alpine3.9"
  password: ""
  resources: {}

config:
  # Specifies whether a ConfigMap for control plane configuration should be created
  create: true
  # The name of the ConfigMap to use when create is false.
  name: ""
  # The name of the configuration file.
  fileName: control-plane-config.yaml
  # Configuration data for control plane when create is false.
  data: |
    apiVersion: "pipecd.dev/v1beta1"
    kind: ControlPlane
    spec:
      datastore:
        type: FIRESTORE
        config:
          namespace: pipecd
          environment: dev
          project: pipecd
          credentialsFile: /etc/pipecd-secret/service-account.json
      filestore:
        type: GCS
        config:
          bucket: pipecd-dev-main
          credentialsFile: /etc/pipecd-secret/service-account.json
      cache:
        ttl: 5m

secret:
  # The name of the Secret should be mounted to container.
  name: "pipecd-secrets"
  mountPath: /etc/pipecd-secret
  signingKey:
    # The name of the signing key file.
    fileName: "signing-key"

quickstart: false
