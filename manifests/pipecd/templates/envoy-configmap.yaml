apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pipecd.fullname" . }}-gateway-envoy-config
  labels:
    {{- include "pipecd.labels" . | nindent 4 }}
    app.kubernetes.io/component: gateway
data:
  envoy-config.yaml: |-
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9095

    static_resources:
      listeners:
      - name: ingress
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 9090
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              access_log:
                name: envoy.file_access_log
                config:
                  path: /dev/stdout
                filter:
                  not_health_check_filter: {}
              codec_type: auto
              idle_timeout: 600s
              stat_prefix: ingress_http
              http_filters:
              - name: envoy.grpc_web
{{- if .Values.cors.enabled }}
              - name: envoy.cors
{{- end }}
              - name: envoy.router
              route_config:
                virtual_hosts:
                - name: envoy
                  domains:
                    - '*'
{{- if .Values.cors.enabled }}
                  cors:
                    allow_origin:
                    {{- range .Values.cors.allowOrigins }}
                      - {{ . }}
                    {{- end }}
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization
                    allow_credentials: true
                    max_age: "1728000"
                    expose_headers: custom-header-1,grpc-status,grpc-message
{{- end }}
                  routes:
                    - match:
                        prefix: /pipe.api.service.pipedservice.PipedService/
                        grpc:
                      route:
                        cluster: server-piped-api
                    - match:
                        prefix: /pipe.api.service.webservice.WebService/
                        grpc:
                      route:
                        cluster: server-web-api
                    - match:
                        path: /
                      route:
                        cluster: server-http
{{- if .Values.gateway.internalTLS.enabled }}
          tls_context:
            common_tls_context:
              tls_certificates:
              - certificate_chain:
                  filename: {{ .Values.secret.mountPath }}/{{ .Values.secret.internalTLSCert.fileName }}
                private_key:
                  filename: {{ .Values.secret.mountPath }}/{{ .Values.secret.internalTLSKey.fileName }}
              alpn_protocols: h2
{{- end }}
      clusters:
      - name: server-piped-api
        http2_protocol_options: {}
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: server-piped-api
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ include "pipecd.fullname" . }}-server
                    port_value: 9080
      - name: server-web-api
        http2_protocol_options: {}
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: server-web-api
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ include "pipecd.fullname" . }}-server
                    port_value: 9081
      - name: server-http
        #http2_protocol_options: {}
        connect_timeout: 0.25s
        type: strict_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: server-http
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ include "pipecd.fullname" . }}-server
                    port_value: 9082
