// Copyright 2020 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pipe.model;
option go_package = "github.com/pipe-cd/pipe/pkg/model";

import "validate/validate.proto";
import "pkg/model/common.proto";

message Piped {
    message CloudProvider {
        string name = 1 [(validate.rules).string.min_len = 1];
        string type = 2 [(validate.rules).string.min_len = 1];
    }

    enum ConnectionStatus {
        ONLINE = 0;
        OFFLINE = 1;
    }

    // The generated unique identifier.
    string id = 1 [(validate.rules).string.min_len = 1];
    // The name of the piped.
    string name = 2 [(validate.rules).string.min_len = 1];
    // The additional description about the piped.
    string desc = 3;
    // The hash value of the secret key generated for the piped.
    // This is used to authenticate while communicating with the control plane.
    string key_hash = 4 [(validate.rules).string.min_len = 1];
    // The ID of the project this enviroment belongs to.
    string project_id = 5 [(validate.rules).string.min_len = 1];

    // Currently running version.
    string version = 7;
    // Unix time when the piped is started up.
    int64 started_at = 8;
    // List of configured cloud providers.
    repeated CloudProvider cloud_providers = 9;
    // List of configured repositories.
    repeated ApplicationGitRepository repositories = 10;
    // The latest connection status of piped.
    ConnectionStatus status = 11 [(validate.rules).enum.defined_only = true];

    // Whether the piped is disabled or not.
    bool disabled = 13;
    // Unix time when the piped is created.
    int64 created_at = 14 [(validate.rules).int64.gt = 0];
    // Unix time of the last time when the piped is updated.
    int64 updated_at = 15 [(validate.rules).int64.gt = 0];
}

