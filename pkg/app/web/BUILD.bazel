load("@npm//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@npm//typescript:index.bzl", "tsc")
load("@npm_bazel_labs//:index.bzl", "ts_proto_library")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load(":jest.bzl", "jest_test")

ts_proto_library(
    name = "api_proto",
    proto = "//pkg/app/api/service/webservice:webservice_proto",
)

ts_proto_library(
    name = "model_proto_ts",
    proto = "//pkg/model:model_proto",
)

nodejs_binary(
    name = "strip_imports",
    entry_point = ":strip-imports.js",
)

genrule(
    name = "build_api",
    srcs = [":api_proto"],
    outs = ["api_client"],
    cmd = "$(locations strip_imports) $(OUTS) $(SRCS)",
    output_to_bindir = True,
    tools = [":strip_imports"],
)

genrule(
    name = "build_model",
    srcs = [":model_proto_ts"],
    outs = ["model"],
    cmd = "$(locations strip_imports) $(OUTS) $(SRCS)",
    output_to_bindir = True,
    tools = [":strip_imports"],
)

tsc(
    name = "compile",
    args = [
        "--project",
        "$(location :tsconfig.json)",
        "--outDir",
        "$(@D)",
    ],
    data = glob(
        [
            "src/**/*",
        ],
        exclude = [
            "src/**/*.test.*",
            "src/**/*.stories.*",
        ],
    ) + [
        ":build_api",
        ":build_model",
        ":tsconfig.json",
        "@npm//:node_modules",
    ],
    output_dir = True,
)

genrule(
    name = "copy_assets",
    srcs = glob(["assets/**/*"]),
    outs = ["assets"],
    cmd = """
    mkdir $(OUTS)
    for f in $(SRCS)
    do
        cp $$f $(OUTS)/
    done
    """,
    output_to_bindir = 1,
    visibility = ["//visibility:public"],
)

webpack(
    name = "public_files",
    args = [
        "--mode",
        "production",
        "--config",
        "$(execpath webpack.config.js)",
        "--html-template",
        "$(execpath base.html)",
        "$(location compile)/index.js",
        "--bazel-bin-path",
        "$(BINDIR)",
        "--output-path",
        "$(@D)",
    ],
    configuration_env_vars = ["ENABLE_MOCK"],
    data = [
        "api_client",
        "base.html",
        "compile",
        "copy_assets",
        "model",
        "webpack.common.js",
        "webpack.config.js",
        "@npm//:node_modules",
    ] + glob(["assets/**/*"]),
    output_dir = True,
    visibility = ["//visibility:public"],
)

jest_test(
    name = "test",
    size = "small",
    srcs = glob([
        "src/**/*.ts",
        "src/**/*.snap",
    ]),
    jest_config = ":jest.config.js",
    deps = [
        ":build_api",
        ":build_model",
        ":file-transformer.js",
        ":jest.after-env.ts",
        ":jest.setup.js",
        ":test-utils.tsx",
        ":tsconfig.json",
        "@npm//:node_modules",
    ],
)
